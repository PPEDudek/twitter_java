package com.favre.ppe.twitter.authentification.java;

import java.io.DataOutputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URISyntaxException;
import java.net.URL;
import java.nio.charset.StandardCharsets;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Locale;

import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;
import javax.net.ssl.HttpsURLConnection;

import com.sun.org.apache.xerces.internal.impl.dv.util.Base64;
import com.sun.org.apache.xml.internal.utils.URI;

import java.util.Date;


public class TwitterAuthHeader {
	public static final String DATE_FORMAT_NOW = "yyyy-MM-dd HH:mm:ss";
	
	//Declaration ours token
	static String oauthConsumerKey = "fDQon1kUoffYBzls52iOGeeSUKY6USBcSN0CMbLjCk4CGc7djs";
	static String oauthConsumerSecret = "fDQon1kUoffYBzls52iOGeeSUKY6USBcSN0CMbLjCk4CGc7djs";
	static String oauthToken = "706818055054233600-axPLau20pgEjl752BmJRsVx0Fzaa6ON";
	static String oauthTokenSecret = "TLQ5uK4KK2ZTWnpMA1I8lA6m5IyuoPdCiJWBiB16wNKpz";
	static String oauthVersion = "1.0";
	static String oauthSignatureMethod = "HMAC-SHA1";
	
	public String getTwitterAuthHeader() throws URISyntaxException, NoSuchAlgorithmException, InvalidKeyException, IOException {
	
		Locale local = new Locale("fr", "FR");
		
		// Creation oauth_nonce
		DateFormat df = new SimpleDateFormat(DATE_FORMAT_NOW);
		Date today = Calendar.getInstance().getTime();		
		String reportDate = df.format(today);
		byte[] reportDateByte = reportDate.getBytes(StandardCharsets.UTF_8);
		
		String oauthNonce = Base64.encode(reportDateByte);
		
		// Creation oauth_timestamp
		long timestamp = System.currentTimeMillis();
		timestamp = timestamp*1000;
		
		String timeStamp = Long.toString(timestamp);
		byte[] time = timeStamp.getBytes(StandardCharsets.UTF_8);
		String oauthTimeStamp = Base64.encode(time).toString();
		
		String resourceUrl = "https://api.twitter.com/1.1/statuses/user_timeline.json";
		URL resourceURL = new URL(resourceUrl);
		String finalResourceUrl = resourceURL.toURI().toString();
		
		// Generation an Encypted oAuth signature
		String baseFormat = "oauth_consumer_key=%s&oauth_nonce=%s&oauth_signature_method=%s"+"&oauth_timestamp=%s&oauth_token=%s&oauth_version=%s";
		
		String tempBaseString = String.format(baseFormat, oauthConsumerKey, oauthNonce, oauthSignatureMethod, oauthTimeStamp, oauthToken, oauthVersion);
		URL baseStringURL = new URL(resourceURL + tempBaseString);
		String finalBaseString = baseStringURL.toURI().toString();
		
		String baseStringTemp = "";
		String baseString = baseStringTemp.concat("GET&").concat(finalResourceUrl).concat("&").concat(finalBaseString);
		
		//
		URL consumerKeyURL = new URL(oauthConsumerKey);
		String finalConsumerKey = consumerKeyURL.toURI().toString();
		URL tokenSecretURL = new URL(oauthTokenSecret);
		String finalTokenSecret = tokenSecretURL.toURI().toString();
		
		String compositeKeyTemp = "";
		String compositeKey = compositeKeyTemp.concat(finalConsumerKey).concat(finalTokenSecret);
		
		String oauthSignature;
		
		SecretKeySpec signinKey = new SecretKeySpec(compositeKey.getBytes(), "HmacSHA1");
		Mac m = Mac.getInstance(signinKey.getAlgorithm());
        m.init(signinKey);
		byte[] signature = m.doFinal(baseString.getBytes());
		oauthSignature = Base64.encode(signature).toString();
		
		// Generate Authentification header
        URL nonceURL = new URL(oauthNonce);
        String finalNonce = nonceURL.toURI().toString();
        URL signatureMethodURL = new URL(oauthSignatureMethod);
        String finalSignatureMethod = signatureMethodURL.toURI().toString();
        URL signatureURL = new URL(oauthSignature);
        String finalSignature = signatureURL.toURI().toString();
        URL timestampURL = new URL(oauthTimeStamp);
        String finalTimestamp = timestampURL.toURI().toString();
        URL tokenURL = new URL(oauthToken);
        String finalToken = tokenURL.toURI().toString();
        URL versionURL = new URL(oauthVersion);
        String finalVersion = versionURL.toURI().toString();
        
		String authHeader = "oauth_consumer_key=%s&oauth_nonce=%s&oauth_signature_method=%s" +
                "&oauth_timestamp=%s&oauth_token=%s&oauth_version=%s";
		String tempHeaderFormat = String.format(authHeader, finalNonce, finalSignatureMethod, finalTimestamp, finalConsumerKey, finalToken, finalSignature, finalVersion);;
		
		HttpsURLConnection request = (HttpsURLConnection)resourceURL.openConnection();
		request.addRequestProperty("Authorization", authHeader);;
		request.setRequestMethod("GET");
		request.addRequestProperty("Content-Type", "application/x-www-form-urlencoded");
		
		DataOutputStream dos = new DataOutputStream(request.getOutputStream());
		System.out.println(dos);
		
		return oauthNonce;
	}	
}	